"""
Utlities to reduce the number of waypoints generated by a planner.
"""
import math

def reduce_waypoints(poses):
    """
    Reduces the number of waypoints in the path

    :param poses: The poses that make up the path
    :type poses: list[:class:`pyrobosim.utils.pose.Pose`]
    """
    waypoints = []
    len_poses = len(poses)
    if len_poses <= 2:
        return poses
    slope = lambda p1, p2: ((p2.x - p1.x), (p2.y - p1.y))
    curr_start = poses[0]
    curr_dx, curr_dy = slope(poses[0], poses[1])
    for i in range(2, len_poses):
        new_dx, new_dy = slope(curr_start, poses[i])
        if not math.isclose((curr_dy * new_dx), (new_dy * curr_dx)):
            waypoints.append(curr_start)
            curr_dx, curr_dy = new_dx, new_dy
            curr_start = poses[i - 1]
    waypoints.append(poses[-1])

    return waypoints